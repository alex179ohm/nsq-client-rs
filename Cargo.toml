[package]
name = "nsq-client"
version = "0.1.12"
authors = ["Alessandro Cresto Miseroglio <alex179ohm@gmail.com>"]
edition = "2018"
description = """
Rust client for the NSQ realtime message processing system
"""
license = "MIT"
keywords = ["nsq", "queue", "actix",  "async", "actor"]
categories = ["caching", "asynchronous"]
repository = "https://github.com/alex179ohm/nsq-client-rs"
readme = "README.md"
exclude = [
    ".gitignore",
    ".travis.yml",
    ".cargo/config",
    ".appveyor.yml",
    "tests/*",
    "examples/consumer/*"
]

[badges]
appveyor = { repository = "alex179ohm/nsq-client-rs" }
travis-ci = { repository = "alex179ohm/nsq-client-rs" }

# [features]
# default = ["tls"]
# tls = ["rustls", "webpki", "webpki-roots"]
# async = ["futures-preview"]

[dependencies]
mio = "0.6"
bytes = "0.4"
log = "0.4"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
hostname = "0.1"
net2 = "0.2"
byteorder = "1.3"
backoff = "0.1"
crossbeam = "0.7.1"
native-tls = "0.2.3"
# rustls = {version = "0.15", features = ["default", "dangerous_configuration"]}
# webpki-roots = "0.16"
# webpki = "0.19"
# webpki = { git = "https://github.com/alex179ohm/webpki", tag = "next", optional = true }
untrusted = "0.6.2"
chrono = "0.4.7"
# futures-preview = { version = "0.3.0-alpha.13", optional = true }
