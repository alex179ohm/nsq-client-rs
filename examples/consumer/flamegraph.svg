<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA[var details, searchbtn, matchedtxt, svg;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}
// mouse-over for info
function s(node) {		// show
    info = g_to_text(node);
    details.nodeValue = nametype + " " + info;
}
function c() {			// clear
    details.nodeValue = ' ';
}
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
})
// functions
function find_child(parent, name, attr) {
    var children = parent.childNodes;
    for (var i=0; i<children.length;i++) {
        if (children[i].tagName == name)
            return (attr != undefined) ? children[i].attributes[attr].value : children[i];
    }
    return;
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_"+attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_"+attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_"+attr].value;
    e.removeAttribute("_orig_"+attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes["width"].value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
    // Smaller than this size won't fit anything
    if (w < 2*fontsize*fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x=txt.length-2; x>0; x--) {
        if (t.getSubStringLength(0, x+2) <= w) {
            t.textContent = txt.substring(0,x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_child(c[i], x-xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = xpad;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr["width"].value);
    var xmin = parseFloat(attr["x"].value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr["y"].value);
    var ratio = (svg.width.baseVal.value - 2*xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "1.0";
    var el = document.getElementsByTagName("g");
    for(var i=0;i<el.length;i++){
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a["x"].value);
        var ew = parseFloat(a["width"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a["y"].value) > ymin;
        } else {
            var upstack = parseFloat(a["y"].value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.style["opacity"] = "0.5";
                zoom_parent(e);
                e.onclick = function(e){unzoom(); zoom(this);};
                update_text(e);
            }
            // not in current path
            else
                e.style["display"] = "none";
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.style["display"] = "none";
            }
            else {
                zoom_child(e, xmin, ratio);
                e.onclick = function(e){zoom(this);};
                update_text(e);
            }
        }
    }
}
function unzoom() {
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "0.0";
    var el = document.getElementsByTagName("g");
    for(i=0;i<el.length;i++) {
        el[i].style["display"] = "block";
        el[i].style["opacity"] = "1";
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.getElementsByTagName("rect");
    for (var i=0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.style["opacity"] = "0.1";
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.style["opacity"] = "0.0";
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementsByTagName("g");
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        if (e.attributes["class"].value != "func_g")
            continue;
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (rect == null) {
            // the rect might be wrapped in an anchor
            // if nameattr href is being used
            if (rect = find_child(e, "a")) {
                rect = find_child(r, "rect");
            }
        }
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes["width"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes["x"].value);
            orig_save(rect, "fill");
            rect.attributes["fill"].value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.style["opacity"] = "1.0";
    searchbtn.firstChild.nodeValue = "Reset Search"
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.style["opacity"] = "1.0";
    pct = 100 * count / maxwidth;
    if (pct == 100)
        pct = "100"
    else
        pct = pct.toFixed(1)
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function searchover(e) {
    searchbtn.style["opacity"] = "1.0";
}
function searchout(e) {
    if (searching) {
        searchbtn.style["opacity"] = "1.0";
    } else {
        searchbtn.style["opacity"] = "0.1";
    }
}
]]></script><rect x="0" y="0" width="1200" height="470" fill="url(#background)"/><text text-anchor="middle" x="600.00" y="24.00" font-size="17" font-family="Verdana" fill="rgb(0, 0, 0)">Flame Graph</text><text id="details" text-anchor="left" x="10.00" y="453.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><text id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" text-anchor="left" x="10.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Reset Zoom</text><text id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" text-anchor="left" x="1090.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Search</text><text id="matched" text-anchor="left" x="1090.00" y="453.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>.annobin_rtld.c (5 samples, 6.67%)</title><rect x="72" y="389" width="79" height="15" fill="rgb(244,36,39)"/><text text-anchor="left" x="75.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">.annobin_..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_start (1 samples, 1.33%)</title><rect x="135" y="373" width="16" height="15" fill="rgb(212,202,54)"/><text text-anchor="left" x="138.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_sysdep_start (1 samples, 1.33%)</title><rect x="135" y="357" width="16" height="15" fill="rgb(233,137,46)"/><text text-anchor="left" x="138.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;consumer::MyReader as nsq_rust::reader::Reader&gt;::handle (1 samples, 1.33%)</title><rect x="293" y="197" width="15" height="15" fill="rgb(223,183,21)"/><text text-anchor="left" x="296.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 1.33%)</title><rect x="293" y="181" width="15" height="15" fill="rgb(225,116,4)"/><text text-anchor="left" x="296.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1 samples, 1.33%)</title><rect x="293" y="165" width="15" height="15" fill="rgb(244,3,37)"/><text text-anchor="left" x="296.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crossbeam_channel::context::Context::wait_until (24 samples, 32.00%)</title><rect x="324" y="133" width="378" height="15" fill="rgb(235,3,24)"/><text text-anchor="left" x="327.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">crossbeam_channel::context::Context::wait_until</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>park (24 samples, 32.00%)</title><rect x="324" y="117" width="378" height="15" fill="rgb(227,34,8)"/><text text-anchor="left" x="327.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">park</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>wait&lt; (24 samples, 32.00%)</title><rect x="324" y="101" width="378" height="15" fill="rgb(238,160,12)"/><text text-anchor="left" x="327.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">wait&lt;</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>wait (24 samples, 32.00%)</title><rect x="324" y="85" width="378" height="15" fill="rgb(217,127,24)"/><text text-anchor="left" x="327.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">wait</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>wait (24 samples, 32.00%)</title><rect x="324" y="69" width="378" height="15" fill="rgb(226,195,7)"/><text text-anchor="left" x="327.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">wait</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__pthread_cond_wait (24 samples, 32.00%)</title><rect x="324" y="53" width="378" height="15" fill="rgb(220,34,33)"/><text text-anchor="left" x="327.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__pthread_cond_wait</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__pthread_disable_asynccancel (4 samples, 5.33%)</title><rect x="639" y="37" width="63" height="15" fill="rgb(235,86,41)"/><text text-anchor="left" x="642.00" y="47.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__pthr..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__rust_maybe_catch_panic (27 samples, 36.00%)</title><rect x="293" y="293" width="425" height="15" fill="rgb(248,88,6)"/><text text-anchor="left" x="296.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__rust_maybe_catch_panic</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panicking::try::do_call (27 samples, 36.00%)</title><rect x="293" y="277" width="425" height="15" fill="rgb(216,34,8)"/><text text-anchor="left" x="296.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panicking::try::do_call</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (27 samples, 36.00%)</title><rect x="293" y="261" width="425" height="15" fill="rgb(245,176,48)"/><text text-anchor="left" x="296.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::F..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h11d01aefdddc2b12 (27 samples, 36.00%)</title><rect x="293" y="245" width="425" height="15" fill="rgb(224,119,4)"/><text text-anchor="left" x="296.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys_common::backtrace::__rust_begin_short_backtrace (27 samples, 36.00%)</title><rect x="293" y="229" width="425" height="15" fill="rgb(244,19,8)"/><text text-anchor="left" x="296.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>nsq_rust::client::Client::subscribe::_$u7b$$u7b$closure$u7d$$u7d$::h26a79eb6a63ba92e (27 samples, 36.00%)</title><rect x="293" y="213" width="425" height="15" fill="rgb(239,121,4)"/><text text-anchor="left" x="296.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">nsq_rust::client::Client::subscribe::_$u7b$$u7b$closure$u7..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (26 samples, 34.67%)</title><rect x="308" y="197" width="410" height="15" fill="rgb(247,207,51)"/><text text-anchor="left" x="311.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">crossbeam_channel::channel::Receiver&lt;T&gt;::recv</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (26 samples, 34.67%)</title><rect x="308" y="181" width="410" height="15" fill="rgb(234,103,24)"/><text text-anchor="left" x="311.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25 samples, 33.33%)</title><rect x="324" y="165" width="394" height="15" fill="rgb(234,197,53)"/><text text-anchor="left" x="327.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crossbeam_channel::context::Context::with::_$u7b$$u7b$closure$u7d$$u7d$::h61cbdb7c694d5df1 (25 samples, 33.33%)</title><rect x="324" y="149" width="394" height="15" fill="rgb(219,114,13)"/><text text-anchor="left" x="327.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">crossbeam_channel::context::Context::with::_$u7b$$u7b..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crossbeam_channel::waker::SyncWaker::register (1 samples, 1.33%)</title><rect x="702" y="133" width="16" height="15" fill="rgb(236,67,46)"/><text text-anchor="left" x="705.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___clone (37 samples, 49.33%)</title><rect x="151" y="389" width="582" height="15" fill="rgb(235,168,52)"/><text text-anchor="left" x="154.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__GI___clone</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>start_thread (29 samples, 38.67%)</title><rect x="277" y="373" width="456" height="15" fill="rgb(249,210,16)"/><text text-anchor="left" x="280.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">start_thread</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::thread::Thread::new::thread_start (29 samples, 38.67%)</title><rect x="277" y="357" width="456" height="15" fill="rgb(246,187,51)"/><text text-anchor="left" x="280.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::sys::unix::thread::Thread::new::thread_start</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>start_thread (28 samples, 37.33%)</title><rect x="293" y="341" width="440" height="15" fill="rgb(222,1,2)"/><text text-anchor="left" x="296.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">start_thread</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>call_once&lt; (28 samples, 37.33%)</title><rect x="293" y="325" width="440" height="15" fill="rgb(234,193,12)"/><text text-anchor="left" x="296.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">call_once&lt;</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;F as alloc::boxed::FnBox&lt;A&gt;&gt;::call_box (28 samples, 37.33%)</title><rect x="293" y="309" width="440" height="15" fill="rgb(233,164,2)"/><text text-anchor="left" x="296.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;F as alloc::boxed::FnBox&lt;A&gt;&gt;::call_box</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::thread::guard::current (1 samples, 1.33%)</title><rect x="718" y="293" width="15" height="15" fill="rgb(238,199,36)"/><text text-anchor="left" x="721.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>pthread_getattr_np (1 samples, 1.33%)</title><rect x="718" y="277" width="15" height="15" fill="rgb(223,134,54)"/><text text-anchor="left" x="721.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_malloc (1 samples, 1.33%)</title><rect x="718" y="261" width="15" height="15" fill="rgb(207,197,31)"/><text text-anchor="left" x="721.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;nsq_rust::config::Config as core::default::Default&gt;::default (1 samples, 1.33%)</title><rect x="733" y="213" width="16" height="15" fill="rgb(213,124,1)"/><text text-anchor="left" x="736.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hostname::get_hostname (1 samples, 1.33%)</title><rect x="733" y="197" width="16" height="15" fill="rgb(234,206,39)"/><text text-anchor="left" x="736.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::ffi::c_str::CStr::to_string_lossy (1 samples, 1.33%)</title><rect x="733" y="181" width="16" height="15" fill="rgb(222,8,44)"/><text text-anchor="left" x="736.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::string::String::from_utf8_lossy (1 samples, 1.33%)</title><rect x="733" y="165" width="16" height="15" fill="rgb(218,151,38)"/><text text-anchor="left" x="736.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;&amp;mio::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 1.33%)</title><rect x="765" y="165" width="15" height="15" fill="rgb(213,35,2)"/><text text-anchor="left" x="768.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (1 samples, 1.33%)</title><rect x="765" y="149" width="15" height="15" fill="rgb(243,87,46)"/><text text-anchor="left" x="768.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__calloc (2 samples, 2.67%)</title><rect x="780" y="165" width="32" height="15" fill="rgb(206,189,33)"/><text text-anchor="left" x="783.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__memset_sse2_unaligned_erms (2 samples, 2.67%)</title><rect x="780" y="149" width="32" height="15" fill="rgb(206,68,37)"/><text text-anchor="left" x="783.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 1.33%)</title><rect x="812" y="165" width="16" height="15" fill="rgb(238,54,12)"/><text text-anchor="left" x="815.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1 samples, 1.33%)</title><rect x="812" y="149" width="16" height="15" fill="rgb(252,174,43)"/><text text-anchor="left" x="815.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>mio::poll::Poll::poll (16 samples, 21.33%)</title><rect x="828" y="165" width="251" height="15" fill="rgb(244,116,32)"/><text text-anchor="left" x="831.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">mio::poll::Poll::poll</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>mio::poll::Poll::poll1 (16 samples, 21.33%)</title><rect x="828" y="149" width="251" height="15" fill="rgb(235,221,22)"/><text text-anchor="left" x="831.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">mio::poll::Poll::poll1</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>mio::sys::unix::epoll::Selector::select (16 samples, 21.33%)</title><rect x="828" y="133" width="251" height="15" fill="rgb(240,115,39)"/><text text-anchor="left" x="831.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">mio::sys::unix::epoll::Selector::..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>epoll_wait (16 samples, 21.33%)</title><rect x="828" y="117" width="251" height="15" fill="rgb(218,152,10)"/><text text-anchor="left" x="831.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">epoll_wait</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>nsq_rust::codec::decode_msg (1 samples, 1.33%)</title><rect x="1079" y="165" width="16" height="15" fill="rgb(214,26,53)"/><text text-anchor="left" x="1082.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_malloc (1 samples, 1.33%)</title><rect x="1079" y="149" width="16" height="15" fill="rgb(207,44,34)"/><text text-anchor="left" x="1082.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 1.33%)</title><rect x="1095" y="149" width="16" height="15" fill="rgb(231,138,29)"/><text text-anchor="left" x="1098.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (1 samples, 1.33%)</title><rect x="1095" y="133" width="16" height="15" fill="rgb(246,20,50)"/><text text-anchor="left" x="1098.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (1 samples, 1.33%)</title><rect x="1095" y="117" width="16" height="15" fill="rgb(227,62,38)"/><text text-anchor="left" x="1098.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>nsq_rust::client::Client::connect (24 samples, 32.00%)</title><rect x="749" y="213" width="378" height="15" fill="rgb(222,49,52)"/><text text-anchor="left" x="752.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">nsq_rust::client::Client::connect</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>nsq_rust::conn::Connection::connect (24 samples, 32.00%)</title><rect x="749" y="197" width="378" height="15" fill="rgb(206,49,13)"/><text text-anchor="left" x="752.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">nsq_rust::conn::Connection::connect</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>nsq_rust::conn::Connection::main_loop (23 samples, 30.67%)</title><rect x="765" y="181" width="362" height="15" fill="rgb(228,58,51)"/><text text-anchor="left" x="768.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">nsq_rust::conn::Connection::main_loop</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>nsq_rust::conn::Connection::write_messages (2 samples, 2.67%)</title><rect x="1095" y="165" width="32" height="15" fill="rgb(229,205,10)"/><text text-anchor="left" x="1098.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">ns..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>nsq_rust::conn::Connection::write_cmd (1 samples, 1.33%)</title><rect x="1111" y="149" width="16" height="15" fill="rgb(253,36,11)"/><text text-anchor="left" x="1114.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>nsq_rust::codec::write_cmd (1 samples, 1.33%)</title><rect x="1111" y="133" width="16" height="15" fill="rgb(225,73,36)"/><text text-anchor="left" x="1114.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;bytes::bytes::BytesMut as core::iter::traits::collect::Extend&lt;&amp;u8&gt;&gt;::extend (1 samples, 1.33%)</title><rect x="1111" y="117" width="16" height="15" fill="rgb(228,64,22)"/><text text-anchor="left" x="1114.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>all (75 samples, 100%)</title><rect x="10" y="421" width="1180" height="15" fill="rgb(223,1,23)"/><text text-anchor="left" x="13.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>consumer (75 samples, 100.00%)</title><rect x="10" y="405" width="1180" height="15" fill="rgb(216,106,1)"/><text text-anchor="left" x="13.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">consumer</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_start (29 samples, 38.67%)</title><rect x="733" y="389" width="457" height="15" fill="rgb(251,108,41)"/><text text-anchor="left" x="736.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">_start</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_start_main (29 samples, 38.67%)</title><rect x="733" y="373" width="457" height="15" fill="rgb(212,136,32)"/><text text-anchor="left" x="736.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__libc_start_main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>main (29 samples, 38.67%)</title><rect x="733" y="357" width="457" height="15" fill="rgb(221,172,16)"/><text text-anchor="left" x="736.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lang_start_internal (29 samples, 38.67%)</title><rect x="733" y="341" width="457" height="15" fill="rgb(227,55,43)"/><text text-anchor="left" x="736.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">lang_start_internal</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>catch_unwind&lt;closure,i32&gt; (29 samples, 38.67%)</title><rect x="733" y="325" width="457" height="15" fill="rgb(207,75,14)"/><text text-anchor="left" x="736.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">catch_unwind&lt;closure,i32&gt;</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>try&lt;i32,closure&gt; (29 samples, 38.67%)</title><rect x="733" y="309" width="457" height="15" fill="rgb(231,177,47)"/><text text-anchor="left" x="736.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">try&lt;i32,closure&gt;</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__rust_maybe_catch_panic (29 samples, 38.67%)</title><rect x="733" y="293" width="457" height="15" fill="rgb(226,189,2)"/><text text-anchor="left" x="736.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__rust_maybe_catch_panic</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_call&lt;closure,i32&gt; (29 samples, 38.67%)</title><rect x="733" y="277" width="457" height="15" fill="rgb(218,88,0)"/><text text-anchor="left" x="736.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">do_call&lt;closure,i32&gt;</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>{{closure}} (29 samples, 38.67%)</title><rect x="733" y="261" width="457" height="15" fill="rgb(213,177,22)"/><text text-anchor="left" x="736.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">{{closure}}</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hd337db6680688eaa (29 samples, 38.67%)</title><rect x="733" y="245" width="457" height="15" fill="rgb(235,54,7)"/><text text-anchor="left" x="736.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hd337db6680..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>consumer::main (29 samples, 38.67%)</title><rect x="733" y="229" width="457" height="15" fill="rgb(246,42,15)"/><text text-anchor="left" x="736.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">consumer::main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>nsq_rust::client::Client::subscribe (4 samples, 5.33%)</title><rect x="1127" y="213" width="63" height="15" fill="rgb(240,104,18)"/><text text-anchor="left" x="1130.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">nsq_ru..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::thread::spawn (4 samples, 5.33%)</title><rect x="1127" y="197" width="63" height="15" fill="rgb(247,152,31)"/><text text-anchor="left" x="1130.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::t..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::thread::Thread::new (4 samples, 5.33%)</title><rect x="1127" y="181" width="63" height="15" fill="rgb(253,180,53)"/><text text-anchor="left" x="1130.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::s..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__pthread_create_2_1 (4 samples, 5.33%)</title><rect x="1127" y="165" width="63" height="15" fill="rgb(226,221,20)"/><text text-anchor="left" x="1130.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__pthr..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___mmap64 (4 samples, 5.33%)</title><rect x="1127" y="149" width="63" height="15" fill="rgb(231,0,4)"/><text text-anchor="left" x="1130.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__GI__..</text></g></svg>